{"mappings":"AA8FmC,MAA7BA,EAAU,CAAC,iBAAkB,aAAc,eAE3CC,EAAW,SAAUC,EAASC,GAED,IAA5B,MAAMC,KAAQF,EAEF,GAAXE,IAASD,EAEgB,MAApB,QAAQA,IAIQ,MAApB,YAAYA,G,EAGrBE,QAAQC,IAAIL,EAASD,EAAS,gBAC9BK,QAAQC,IAAIL,EAASD,EAAS,eAC9BK,QAAQC,IAAIL,EAASD,EAAS,mBAE9B,MAAMO,EAAW,CAAC,YAAa,SAAU,YACnCC,EAAa,SAAUC,EAAWC,GACtC,IAAK,MAAMC,KAAaJ,EACtB,GAAII,IAAcD,EAChB,MAAO,SAASA,WAGpB,MAAO,SAASA,e,EAElBL,QAAQC,IAAIE,EAAWD,EAAU,cACjCF,QAAQC,IAAIE,EAAWD,EAAU,WACjCF,QAAQC,IAAIE,EAAWD,EAAU,cC3HjCF,QAAQC,IADA","sources":["src/js/module-one.js","src/js/module-two.js"],"sourcesContent":["// function processCall(recipient) {\n//   // Имитируем доступность абонента случайным числом\n//   const isRecipientAvailable = Math.random() > 0.5;\n\n//   if (!isRecipientAvailable) {\n//     console.log(`Абонент ${recipient} недоступен, оставьте сообщение.`);\n//     // Логика активации автоответчика\n//   } else {\n//     console.log(`Соединяем с ${recipient}, ожидайте...`);\n//     // Логика принятия звонка\n//   }\n// }\n\n// processCall('Манго');\n\n// function calcNum(price) {\n//   const numValue = Math.rondom() > 0.5;\n\n//   if (!numValue) {\n//     console.log(`what num${price} wait!`);\n//   } else {\n//     console.log(`Num is${price}`);\n//   }\n// }\n// calcNum('price');\n\n// const add = function (a, b, c) {\n//   console.log('total:');\n//   return a + b + c;\n// };\n\n// const add1 = add(1, 2, 3);\n// console.log('add1:', add1);\n\n// const add2 = add((1, 2, 3) * 2);\n// console.log('add2:', add2);\n\n// const loginPassword = function (admin, user) {\n//   const ADMIN_PASSWORD = \"\";\n//   let i = 0;\n//   for (let i = 0; i >= ADMIN_PASSWORD.length; i++)\n\n// };\n\n// // стек вызовов функций\n\n// const fnA = function () {\n//   console.log('Total one:');\n//   return fnB();\n// };\n// const fnB = function () {\n//   console.log('Total two:');\n//   return fnC();\n// };\n// const fnC = function () {\n//   console.log('Total three:');\n// };\n// fnA();\n\n//  сложение массива\n// const totalPrice = function (items) {\n//   let total = 0;\n//   for (const item of items) {\n//     total += item;\n//   }\n//   return total;\n// };\n\n// const t1 = totalPrice([21, 34, 123]);\n// const t2 = totalPrice([12, 12, 1223]);\n// const t3 = totalPrice([15, 23, 123]);\n\n// console.log('t1:', t1);\n// console.log('t2:', t2);\n// console.log('t3:', t3);\n\n// функция \"name\" для перебора и логирования\n\n// const logItems = function (items) {\n//   let total = 0;\n//   for (const item of items) {\n//     console.log(items);\n//   }\n// };\n\n// logItems(['one', 'two', 'three']);\n// logItems([4, 5, 6]);\n// logItems(['seven', 'eght', 'nine']);\n\n// напиши функцию findPass(allPass, passFind) для поиска логина\n//  если логина нет, вывести сообщение \"пользователь `${passFind}` не найден\"\n//  если логин найден, вывести сообщение \"пользователь `${passFind}` найден\"\n\n// 1.объявляем переменную с массивом паролей ['','']\nconst allPass = ['123@%!@##%%%11', '12!@!@#f11', '1rf13f4@33r'];\n// 2.объяляем функцию с аргументами (массив паролей, пароль найден)\nconst findPass = function (allPass, passFind) {\n  // 3.через for...of перебираем итерируемые объекты\n  for (const pass of allPass) {\n    // 4.булевая проверка\n    if (pass === passFind) {\n      // 5.возвращаем проверку из функции\n      return `find ${passFind}`;\n    }\n  }\n  // 6.возврат если проверка не прошла\n  return `not find ${passFind}`;\n};\n// 7.объявляем лог внутри которого(имя функции(имя массива, \"один элемент массива\"))\nconsole.log(findPass(allPass, '12cvbcvbf11'));\nconsole.log(findPass(allPass, '12!@!@#f11'));\nconsole.log(findPass(allPass, '123@%!@##%%%11'));\n\nconst itemsArr = ['123c144v4', '1232v4', '123c1454'];\nconst checkItems = function (countItem, findItem) {\n  for (const countItem of itemsArr) {\n    if (countItem === findItem) {\n      return `item: ${findItem} - find`;\n    }\n  }\n  return `item: ${findItem} - not found`;\n};\nconsole.log(checkItems(itemsArr, '123c144v4'));\nconsole.log(checkItems(itemsArr, '1232v4'));\nconsole.log(checkItems(itemsArr, '122c144v4'));\n","let i = 20;\nconsole.log(i);\n"],"names":["$b882584b0c4cecf1$var$allPass","$b882584b0c4cecf1$var$findPass","allPass1","passFind","pass","console","log","$b882584b0c4cecf1$var$itemsArr","$b882584b0c4cecf1$var$checkItems","countItem","findItem","countItem1"],"version":3,"file":"index.22db099f.js.map"}